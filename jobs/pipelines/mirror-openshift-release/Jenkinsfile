@Library('jenkins-upstream-library') _
pipeline {
    agent {
        docker {
            image 'quay.io/powercloud/inbound-agent:4.10-3.3'
            args '-v /etc/resolv.conf:/etc/resolv.conf -v /var/run/docker.sock:/var/run/docker.sock:rw'
            label 'jump-vpc-x86_64'
        }    
    }
    options {
        copyArtifactPermission('*');
    }
    environment {
        //users and credentials. All must be defined in Jenkins Credentials
        ARTIFACTORY_USER = credentials('ARTIFACTORY_USER')
        ARTIFACTORY_TOKEN = credentials('ARTIFACTORY_TOKEN')
        CI_OCP_TOKEN_2 = credentials('CI_OCP_TOKEN_2')
        DOCKER_REGISTRY = "docker-na.artifactory.swg-devops.com/sys-powercloud-docker-local"
    }
    stages {
        stage('Get images and push') {
            steps {
                script {
                    ansiColor('xterm') {
                        echo ""
                    }
                    try
                    {
                    sh '''
                        cd ${WORKSPACE}/scripts
                        apt update
                        apt install docker docker.io jq -y
                        docker login -u ${ARTIFACTORY_USER} -p ${ARTIFACTORY_TOKEN} ${DOCKER_REGISTRY}
                        wget https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz -O /tmp/oc.tar.gz
                        tar zvxf /tmp/oc.tar.gz
                        chmod +x oc
                        export PATH=$PATH:$PWD
                        oc login --token=${CI_OCP_TOKEN_2} --server=https://api.ci.l2s4.p1.openshiftapps.com:6443
                        oc registry login --skip-check
                        ./mirror-images.sh || true
                    '''
                    }
                    catch (err)
                    {
                        echo 'Error ! Mirroring Failed!'
                        throw err
                    }
                }
            }
        }

        stage('Prepare Terraform Template') {
            steps {
                script {
                    ansiColor('xterm') {
                        echo ""
                    }
                    try
                    {
                    sh '''
                    curl https://openshift-release-ppc64le.apps.ci.l2s4.p1.openshiftapps.com/ > builds.raw.txt
                    cat builds.raw.txt | grep -A 2 '<td class="text-monospace"' | grep -v '^--' | awk 'NR%3{printf "%s ",$0;next;}1'|grep -v 'Failed' |sed 's|\\([^/]*/\\)\\{4\\}[^>]*>\\([^>]*\\).*title[^"]*"\\([^"]*\\).*|\\2  \\3|' | sed 's/<\\/a//'| sort -k2 -r |awk -v registry="${DOCKER_REGISTRY}" '{print registry"/ocp-ppc64le/release-ppc64le:"$0}' > all-builds.txt
                    #All Builds
                    grep '4\\.8\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.8-builds.txt
                    grep '4\\.9\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.9-builds.txt
                    grep '4\\.10\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.10-builds.txt
                    grep '4\\.11\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.11-builds.txt
                    grep '4\\.12\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.12-builds.txt
                    grep '4\\.13\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.13-builds.txt
                    grep '4\\.14\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.14-builds.txt
                    grep '4\\.15\\.[0-9]\\?[0-9]' all-builds.txt  > all-4.15-builds.txt

                    #Latest Builds
                    cat all-4.8-builds.txt|head -n 1|awk '{print $1}'  > latest-4.8-build.txt
                    cat all-4.9-builds.txt|head -n 1|awk '{print $1}'  > latest-4.9-build.txt
                    cat all-4.10-builds.txt|head -n 1|awk '{print $1}' > latest-4.10-build.txt
                    cat all-4.11-builds.txt|head -n 1|awk '{print $1}' > latest-4.11-build.txt
                    cat all-4.12-builds.txt|head -n 1|awk '{print $1}' > latest-4.12-build.txt
                    cat all-4.13-builds.txt|head -n 1|awk '{print $1}' > latest-4.13-build.txt
                    cat all-4.14-builds.txt|head -n 1|awk '{print $1}' > latest-4.14-build.txt
                    cat all-4.15-builds.txt|head -n 1|awk '{print $1}' > latest-4.15-build.txt

                    #All stable Builds
                    cat all-4.8-builds.txt | grep -v 'nightly\\|-rc\\|-fc\\|-ec' > all-4.8-stable-builds.txt
                    cat all-4.9-builds.txt | grep -v 'nightly\\|-rc\\|-fc\\|-ec' > all-4.9-stable-builds.txt
                    cat all-4.10-builds.txt | grep -v 'nightly\\|-rc\\|-fc\\|-ec' > all-4.10-stable-builds.txt
                    cat all-4.11-builds.txt | grep -v 'nightly\\|-rc\\|-fc\\|-ec' > all-4.11-stable-builds.txt
                    cat all-4.12-builds.txt | grep -v 'nightly\\|-rc\\|-fc\\|-ec' > all-4.12-stable-builds.txt
                    cat all-4.13-builds.txt | grep -v 'nightly\\|-rc\\|-fc\\|-ec' > all-4.13-stable-builds.txt
                    cat all-4.14-builds.txt | grep '\\-ec' > all-4.14-ec-builds.txt
                    cat all-4.14-builds.txt | grep '\\-rc' > all-4.14-rc-builds.txt
                    cat all-4.15-builds.txt | grep '\\-ec' > all-4.15-ec-builds.txt


                    #Latest stable build
                    cat all-4.8-stable-builds.txt |head -n 1|awk '{print $1}' > latest-4.8-stable-build.txt
                    cat all-4.9-stable-builds.txt |head -n 1|awk '{print $1}' > latest-4.9-stable-build.txt
                    cat all-4.10-stable-builds.txt |head -n 1|awk '{print $1}' > latest-4.10-stable-build.txt
                    cat all-4.11-stable-builds.txt |head -n 1|awk '{print $1}' > latest-4.11-stable-build.txt
                    cat all-4.12-stable-builds.txt |head -n 1|awk '{print $1}' > latest-4.12-stable-build.txt
                    cat all-4.13-stable-builds.txt |head -n 1|awk '{print $1}' > latest-4.13-stable-build.txt
                    cat all-4.14-ec-builds.txt |head -n 1|awk '{print $1}' > latest-4.14-ec-build.txt
                    cat all-4.14-rc-builds.txt |head -n 1|awk '{print $1}' > latest-4.14-rc-build.txt
                    cat all-4.15-ec-builds.txt |head -n 1|awk '{print $1}' > latest-4.15-ec-build.txt
                    '''
                    }
                    catch (err)
                    {
                        echo 'Error ! Template preparation failed !'
                        env.FAILED_STAGE=env.STAGE_NAME
                        throw err
                    }
                }
            }
        }
    }
    post {
        always {
            archiveAllArtifacts("builds.raw.txt", "all-builds.txt", "all-4.8-builds.txt","all-4.9-builds.txt",
                                  "all-4.10-builds.txt","all-4.11-builds.txt", "all-4.12-builds.txt", "all-4.13-builds.txt",
                                  "all-4.14-builds.txt", "all-4.15-builds.txt",
                                  "latest-4.8-build.txt", "latest-4.9-build.txt","latest-4.10-build.txt",
                                  "latest-4.11-build.txt","latest-4.12-build.txt", "latest-4.13-build.txt",
                                  "latest-4.14-build.txt", "latest-4.15-build.txt",
                                  "all-4.8-stable-builds.txt", "all-4.9-stable-builds.txt","all-4.10-stable-builds.txt",
                                  "all-4.11-stable-builds.txt","all-4.12-stable-builds.txt","all-4.13-stable-builds.txt",
                                  "all-4.14-ec-builds.txt", "all-4.14-rc-builds.txt", "all-4.15-ec-builds.txt",
                                  "latest-4.8-stable-build.txt", "latest-4.9-stable-build.txt", "latest-4.10-stable-build.txt",
                                  "latest-4.11-stable-build.txt", "latest-4.12-stable-build.txt","latest-4.13-stable-build.txt",
                                  "latest-4.14-ec-build.txt", "latest-4.14-rc-build.txt", "latest-4.15-ec-build.txt")
            cleanWs()
        }
    }
}
