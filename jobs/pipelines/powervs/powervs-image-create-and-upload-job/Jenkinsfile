@Library('jenkins-upstream-library') _
pipeline {
    agent {
        docker {
            image 'quay.io/powercloud/inbound-agent:4.10-3.3'
            args '-v /etc/resolv.conf:/etc/resolv.conf'
            label 'jump-vpc-x86_64'
        }
    }
    parameters {
	    string(defaultValue: '', description: 'Rhel Url', name: 'RhelUrl')
	    string(defaultValue: '', description: 'Rhcos Url', name: 'RhcosUrl')
	    string(defaultValue: '', description: 'Centos Url', name: 'CentosUrl')
        booleanParam(defaultValue: false, name: 'SkipOsPassword', description: 'Skip Root User Password change') 
        string(defaultValue: 'v0.1.11', description: "Pvsadm version", name: 'pvsadmVersion')
        string(defaultValue: 'ocp4-images-bucket', description: "COS Bucket Name", name: 'CosBucket')
        string(defaultValue: 'ocp4-on-power', description: "COS Instance Name", name: 'CosInstance')
	    text(defaultValue: '''rdr-ocp-cicd-toronto01''',
                            name: 'instance_list')
	}
    environment {
        //Credentials. All must be defined in Jenkins Credentials
        IBMCLOUD_API_KEY = credentials('IBMCLOUD_UPSTREAM_CI_API_KEY_1')
        RHEL_SUBSCRIPTION_USERNAME = credentials('REDHAT_USERNAME')
        RHEL_SUBSCRIPTION_PASSWORD = credentials('REDHAT_PASSWORD')
        //Parameters
        RHEL_URL = "${params.RhelUrl.trim()}"
        CENTOS_URL = "${params.CentosUrl.trim()}"
        RHCOS_URL = "${params.RhcosUrl.trim()}"
        PVSADM_VERSION="${params.pvsadmVersion.trim()}"
        COS_BUCKET = "${params.CosBucket.trim()}"
        COS_INSTANCE = "${params.CosInstance.trim()}"
        SKIP_OS_PASSWORD = "${params.SkipOsPassword}"
	}

    stages {
        stage('Run script to create and upload image') {
            steps {
                script {
                    ansiColor('xterm') {
                        echo ""
                    }
                    try {
                        def text=""
                        params.instance_list.split("\n").each {
                           instance -> text=text + "${instance.trim()}" + "\n"
                        }
                        writeFile file: 'scripts/powervs_instance_list.txt', text: text+"\n"
                        sh '''#!/bin/bash
                            cd ${WORKSPACE}/scripts
                            chmod +x convert-upload-image-powervs.sh
                            convert_cmd="--rhel-url "${RHEL_URL}" --rhcos-url "${RHCOS_URL}" --centos-url "${CENTOS_URL}" --cos-bucket "${COS_BUCKET}" --region 'us-south' --cos-instance-name "${COS_INSTANCE}" --pvsadm_version "${PVSADM_VERSION}" "
                            if [ ${SKIP_OS_PASSWORD} == true ] ; then
                               convert_cmd+="--skip-os-password "
                            fi
                            echo ${convert_cmd}
                            #./convert-upload-image-powervs.sh --rhel-url "${RHEL_URL}" --rhcos-url "${RHCOS_URL}" --centos-url "${CENTOS_URL}" --cos-bucket "${COS_BUCKET}" --region 'us-south' --cos-instance-name "${COS_INSTANCE}" --pvsadm_version "${PVSADM_VERSION}"
                        '''
                        }
                    catch (err) {
                        echo 'Error ! Create and upload image failed!'
                        throw err
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts allowEmptyArchive: true, artifacts: 'scripts/output.txt', fingerprint: true, onlyIfSuccessful: true
            archiveArtifacts allowEmptyArchive: true, artifacts: 'scripts/logs.tar.gz', fingerprint: true, onlyIfSuccessful: true
            cleanWs()
        }
    }
}
