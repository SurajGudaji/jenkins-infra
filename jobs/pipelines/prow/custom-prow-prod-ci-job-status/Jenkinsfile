@Library('jenkins-upstream-library') _

pipeline {
    agent {
        docker {
            image 'quay.io/powercloud/inbound-agent:4.10-3.3'
            args '-v /etc/resolv.conf:/etc/resolv.conf'
            label 'jump-vpc-x86_64'
        }
    }
    parameters {
        string(defaultValue: '14,15,16', description: 'Enter CI numbers separated by commas (e.g., 14,15,16)', name: 'SelectedCi')
        string(defaultValue: '2023-12-13', description: 'Enter the from date from where you want to get the details as yyyy-mm-dd format (e.g., 2023-12-13 )', name: 'StartDate')
        string(defaultValue: '2023-12-14', description: 'Enter the last date till where you want to get the details as yyyy-mm-dd format (e.g., 2023-12-16 )', name: 'EndDate')
        string(defaultValue: '3', description: 'Enter the query option', name: 'QueryOption')
    }
    environment {
        //Parameters
        SELECTED_CI = "${params.SelectedCi}"
        BEFORE_DATE = "${params.EndDate}"
        AFTER_DATE = "${params.StartDate}"
        QUERY_OPTION = "${params.QueryOption}"
     }
    stages {
        stage('Run Daily Build Update Script'){
            steps{
                script {
                    try {
                        sh '''
                            #!/bin/bash
                            if command -v python3 &>/dev/null; then
                                echo "Python3 installed"
                            else
                                sudo apt-get install -y python3
                            fi
                            
                            if command -v pip &>/dev/null; then
                                echo "pip installed"
                            else
                                sudo apt-get install -y python3-pip
                                 
                            fi
                            sudo pip install virtualenv
                            echo "Clone ci monitoring repo"
                            git clone https://github.com/Poorna-Gottimukkula1/ci-monitoring-automation.git
                            
                            echo "Activate virtualenv"
                            cd ci-monitoring-automation
                            virtualenv venv
                            . ./venv/bin/activate
                            
                            pip install -r requirements.txt
                            
                            echo "Executing daily build update script"
                            cat config.ini
                            echo "========================="

                            sed -i "s/__CI__/$SELECTED_CI/g" config_jenkins.ini 
                            sed -i "s/__BDATE__/${BEFORE_DATE}/g" config_jenkins.ini 
                            sed -i "s/__ADATE__/${AFTER_DATE}/g" config_jenkins.ini 
                            sed -i "s/__QP__/${QUERY_OPTION}/g" config_jenkins.ini
                            cp -rp config_jenkins.ini config.ini
                            cat config.ini
                            echo "========================="
                            python3 CI_JobHistory.py > output.txt
                            cat ./output.txt
                        '''
                    }
                    catch (err){
                            echo 'Error ! Failed while running CI_DailyBuildUpdates script'
                            env.FAILED_STAGE=env.STAGE_NAME
                            throw err
                    }
                }
           }
        }

    }
    
    post {
        always {
            archiveAllArtifacts("ci-monitoring-automation/output.txt")
            cleanWs()
        }
    }

}